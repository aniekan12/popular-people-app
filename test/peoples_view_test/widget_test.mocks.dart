// Mocks generated by Mockito 5.3.0 from annotations
// in popular_people_app/test/peoples_view_test/widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:ui' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:popular_people_app/managers/app_state_manager.dart' as _i2;
import 'package:popular_people_app/models/popular_people_model.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AppStateManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppStateManager extends _i1.Mock implements _i2.AppStateManager {
  MockAppStateManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isInitialized =>
      (super.noSuchMethod(Invocation.getter(#isInitialized), returnValue: false)
          as bool);
  @override
  set isInitialized(bool? v) =>
      super.noSuchMethod(Invocation.setter(#isInitialized, v),
          returnValueForMissingStub: null);
  @override
  String get transactionError =>
      (super.noSuchMethod(Invocation.getter(#transactionError), returnValue: '')
          as String);
  @override
  set transactionError(String? transactionError) =>
      super.noSuchMethod(Invocation.setter(#transactionError, transactionError),
          returnValueForMissingStub: null);
  @override
  int get totalNumberOfPeople => (super
          .noSuchMethod(Invocation.getter(#totalNumberOfPeople), returnValue: 0)
      as int);
  @override
  set totalNumberOfPeople(int? numberOfPeople) => super.noSuchMethod(
      Invocation.setter(#totalNumberOfPeople, numberOfPeople),
      returnValueForMissingStub: null);
  @override
  set popularPeopleModel(_i3.PopularPeopleModel? popularPeopleModel) => super
      .noSuchMethod(Invocation.setter(#popularPeopleModel, popularPeopleModel),
          returnValueForMissingStub: null);
  @override
  List<_i3.PopularPeopleModel> get popularPeople => (super.noSuchMethod(
      Invocation.getter(#popularPeople),
      returnValue: <_i3.PopularPeopleModel>[]) as List<_i3.PopularPeopleModel>);
  @override
  set popularPeople(List<_i3.PopularPeopleModel>? popularpeople) =>
      super.noSuchMethod(Invocation.setter(#popularPeople, popularpeople),
          returnValueForMissingStub: null);
  @override
  List<_i3.PopularPeopleModel> get currentPopularPeople => (super.noSuchMethod(
      Invocation.getter(#currentPopularPeople),
      returnValue: <_i3.PopularPeopleModel>[]) as List<_i3.PopularPeopleModel>);
  @override
  set currentPopularPeople(List<_i3.PopularPeopleModel>? popularpeople) => super
      .noSuchMethod(Invocation.setter(#currentPopularPeople, popularpeople),
          returnValueForMissingStub: null);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i4.Future<bool> fetchPopularPeople({int? page = 1}) => (super.noSuchMethod(
      Invocation.method(#fetchPopularPeople, [], {#page: page}),
      returnValue: _i4.Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  void checkPageNumber(int? page, Map<dynamic, dynamic>? resp) =>
      super.noSuchMethod(Invocation.method(#checkPageNumber, [page, resp]),
          returnValueForMissingStub: null);
  @override
  void setEmptyLists() =>
      super.noSuchMethod(Invocation.method(#setEmptyLists, []),
          returnValueForMissingStub: null);
  @override
  List<_i3.PopularPeopleModel> setPopularPeopleList(
          Map<dynamic, dynamic>? resp) =>
      (super.noSuchMethod(Invocation.method(#setPopularPeopleList, [resp]),
              returnValue: <_i3.PopularPeopleModel>[])
          as List<_i3.PopularPeopleModel>);
  @override
  void disposeValues() =>
      super.noSuchMethod(Invocation.method(#disposeValues, []),
          returnValueForMissingStub: null);
  @override
  void closeApp() => super.noSuchMethod(Invocation.method(#closeApp, []),
      returnValueForMissingStub: null);
  @override
  void addListener(_i5.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i5.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}
